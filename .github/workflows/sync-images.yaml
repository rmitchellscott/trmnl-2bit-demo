name: Sync GLdashboard Images

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  sync-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout our repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      
      - name: Download GLdashboard images
        run: |
          # Create temp directory for download
          mkdir -p /tmp/gl-images
          cd /tmp/gl-images
          
          # Download the repository archive
          curl -L https://github.com/GLdashboard/legendary-palm-tree/archive/main.zip -o main.zip
          unzip main.zip
          
          # Find all PNG files
          find legendary-palm-tree-main -name "*.png" -type f > /tmp/new-images.txt
      
      - name: Copy new and changed images
        run: |
          # Ensure target directory exists
          mkdir -p images/legendary-palm-tree
          
          # Track if we found new or changed images
          CHANGED_IMAGES=false
          CHANGED_IMAGE_LIST=""
          
          # Copy each PNG file if it's new or changed
          while IFS= read -r img; do
            filename=$(basename "$img")
            target_path="images/legendary-palm-tree/$filename"
            
            if [ ! -f "$target_path" ]; then
              # New image
              cp "/tmp/gl-images/$img" "$target_path"
              echo "Added new image: $filename"
              CHANGED_IMAGES=true
              CHANGED_IMAGE_LIST="${CHANGED_IMAGE_LIST}- ${filename} (new)\n"
            else
              # Check if image has changed by comparing checksums
              source_hash=$(sha256sum "/tmp/gl-images/$img" | cut -d' ' -f1)
              existing_hash=$(sha256sum "$target_path" | cut -d' ' -f1)
              
              if [ "$source_hash" != "$existing_hash" ]; then
                cp "/tmp/gl-images/$img" "$target_path"
                echo "Updated changed image: $filename"
                CHANGED_IMAGES=true
                CHANGED_IMAGE_LIST="${CHANGED_IMAGE_LIST}- ${filename} (updated)\n"
              fi
            fi
          done < /tmp/new-images.txt
          
          # Set outputs for next steps
          echo "new_images=$CHANGED_IMAGES" >> $GITHUB_OUTPUT
          echo "image_list<<EOF" >> $GITHUB_OUTPUT
          echo -e "$CHANGED_IMAGE_LIST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        id: copy-images
      
      - name: Create Pull Request
        if: steps.copy-images.outputs.new_images == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: "üñºÔ∏è Sync images from GLdashboard/legendary-palm-tree"
          branch: sync-images-automated
          delete-branch: true
          title: "üñºÔ∏è Image updates from GLdashboard/legendary-palm-tree"
          body: |
            ## Image changes detected
            
            This PR includes the following image changes from GLdashboard/legendary-palm-tree:
            
            ${{ steps.copy-images.outputs.image_list }}
            
            Please review the images before merging.
            
            ---
            *This PR was automatically generated by the image sync workflow.*
          labels: |
            images
            automated
